{"version":3,"file":"index.js","sources":["../src/utils/index.ts","../src/utils/locator.ts","../src/property.ts","../src/utils/compare.ts","../src/config/index.ts","../src/similarity.ts"],"sourcesContent":["export function elementIsVisible(element) {\n    if (getComputedStyle(element).visibility === 'hidden' || element.getBoundingClientRect().height == 0) {\n        return false;\n    }\n    return true;\n}\nexport function uniq(arr) {\n    return Array.from(new Set(arr));\n}\nexport function uniqElements(elements) {\n    return [...elements].reduce((uniq, element) => {\n        if (!uniq.some((storedElement) => storedElement.contains(element))) {\n            uniq.push(element);\n        }\n        return uniq;\n    }, []);\n}\nexport function getElementByXPath(xpath) {\n    return document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n}\nexport function toPrecision(num, precision = 6) {\n    return Number(num.toFixed(precision));\n}\n/**\n * 移除非法字段，仅保留字母和数字\n * @param str\n * @returns\n */\nexport function stripString(str) {\n    return (str || '').replace(/[^a-zA-Z0-9]/g, '');\n}\nexport function isString(value) {\n    return typeof value === 'string';\n}\nexport function isNil(value) {\n    return value === null || value === undefined;\n}\nexport function isArray(value) {\n    return Array.isArray(value);\n}\nexport function isPlainObject(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nexport function isNumber(value) {\n    return typeof value === 'number';\n}\nexport function isEmpty(value) {\n    if (isNil(value)) {\n        return true;\n    }\n    if (isString(value) && !value.length) {\n        return true;\n    }\n    if (isArray(value) && !value.length) {\n        return true;\n    }\n    if (isPlainObject(value) && !Object.keys(value).length) {\n        return true;\n    }\n    if (isNumber(value) && value === 0) {\n        return true;\n    }\n    return false;\n}\n/**\n * 获取数组交集\n * @param a\n * @param b\n */\nexport function intersection(a, b) {\n    return [...new Set(a.filter((item) => b.includes(item)))];\n}\n/**\n * 获取数组并集\n * @param a\n * @param b\n * @returns\n */\nexport function union(a, b) {\n    return [...new Set([...a, ...b])];\n}\n//# sourceMappingURL=index.js.map","export function getXPath(element) {\n    const idx = (sib, name) => sib ? idx(sib.previousElementSibling, name || sib.localName) + (sib.localName == name) : 1;\n    const segs = (elm) => !elm || elm.nodeType !== 1\n        ? ['']\n        : [\n            ...segs(elm.parentNode),\n            elm instanceof HTMLElement\n                ? `${elm.localName}[${idx(elm)}]`\n                : `*[local-name() = '${elm.localName}'][${idx(elm)}]`,\n        ];\n    return segs(element).join('/');\n}\nexport function getIdXPath(element) {\n    const idx = (sib, name) => sib ? idx(sib.previousElementSibling, name || sib.localName) + (sib.localName == name) : 1;\n    const segs = (elm) => !elm || elm.nodeType !== 1\n        ? ['']\n        : elm.id && document.getElementById(elm.id) === elm\n            ? [`//*[@id='${elm.id}']`]\n            : [\n                ...segs(elm.parentNode),\n                elm instanceof HTMLElement\n                    ? `${elm.localName}[${idx(elm)}]`\n                    : `*[local-name() = '${elm.localName}'][${idx(elm)}]`,\n            ];\n    return segs(element).join('/');\n}\n//# sourceMappingURL=locator.js.map","/**\n * 获取 element 的属性\n */\nimport { elementIsVisible, getElementByXPath, uniqElements } from './utils/index';\nimport { getIdXPath, getXPath } from './utils/locator';\n// export { getAusDomPath } from './utils/aus_selector';\n// export { getRobustXPath } from './utils/robula';\nexport { getElementByXPath } from './utils/index';\n/**\n * 获取元素 classList\n * @param element HTMLElement\n * @returns class 数组\n */\nfunction getElementClassList(element) {\n    return Array.from(element.classList).filter((className) => !['undefined', 'null'].includes(className));\n}\nfunction isButtonElement(element) {\n    if (!element) {\n        return false;\n    }\n    const { tagName, className } = element;\n    if (tagName === 'BUTTON') {\n        return true;\n    }\n    if (tagName === 'A' && /btn|button/i.test(className || '')) {\n        return true;\n    }\n    if (tagName === 'INPUT' && ['button', 'submit', 'reset'].includes(element.type)) {\n        return true;\n    }\n    return false;\n}\nfunction getElementLocation(element) {\n    const { left, top, width, height } = element.getBoundingClientRect();\n    return {\n        x: Math.floor(left),\n        y: Math.floor(top),\n        width: Math.floor(width),\n        height: Math.floor(height),\n    };\n}\nfunction getElementArea(location) {\n    const { width, height } = location;\n    return width * height;\n}\nfunction getElementShape(location) {\n    const { width, height } = location;\n    return Math.floor((width * 100) / height);\n}\nfunction getVisibleText(element) {\n    // textContent 会获取到隐藏元素的文本，所以使用 innerText\n    const text = ['innerText', 'value', 'placeholder'].map((name) => (element[name] || '').trim()).find(Boolean);\n    return (text || '').split(/[\\n\\s]+/);\n}\nfunction getElementHeight(element) {\n    return element.getBoundingClientRect().height;\n}\n/**\n * 判断是否是有效的邻居节点\n * @param currentElement\n * @param element\n * @returns\n */\nfunction isValidNeighborElement(currentElement, element) {\n    if (!currentElement) {\n        return false;\n    }\n    if (currentElement === element) {\n        return false;\n    }\n    if (currentElement.contains(element)) {\n        return false;\n    }\n    return true;\n}\n/**\n * 获取元素周围 50px 的文本\n * @param location 元素区域\n * @returns string\n */\nexport function getNeighborText(element, location) {\n    const { x, y, width, height } = location;\n    /**\n     * TODO: 元素区域过大时，不进行文本获取 (Why?)\n     */\n    if (height > 100 || width > 600) {\n        return [];\n    }\n    /**\n     * 元素周围区域(top,right,bottom,left)的起始和结束坐标\n     */\n    const areas = [\n        [x - 50, y - 50, x + width + 50, y],\n        [x + width, y, x + width + 50, y + height],\n        [x - 50, y + height, x + width + 50, y + height + 50],\n        [x - 50, y, x, y + height],\n    ];\n    const xStep = 20; // 每次移动的 x 距离, 这里假设含有可见文本的元素的最小宽度是 20\n    const yStep = 10; // 每次移动的 y 距离, 这里假设含有可见文本的元素的最小高度是 10\n    const neighborElements = [];\n    areas.forEach((area) => {\n        const [x1, y1, x2, y2] = area;\n        for (let i = x1; i < x2; i += xStep) {\n            for (let j = y1; j < y2; j += yStep) {\n                const pointElement = document.elementFromPoint(i, j);\n                isValidNeighborElement(pointElement, element) && neighborElements.push(pointElement);\n            }\n        }\n    });\n    // 获取元素周围的文本\n    const textListByString = uniqElements(neighborElements\n        // 过滤掉高度大于 100 的元素\n        .filter((element) => getElementHeight(element) <= 100)).reduce((textMap, currentElement) => {\n        const text = getVisibleText(currentElement); // 'src \\n  上传打包后的内容'\n        textMap[text.join(' ')] = text; // 使用 map 是为了解决元素周围的文本重复的问题\n        return textMap;\n    }, {});\n    return Object.values(textListByString).flat().filter(Boolean); // 原始数据不进行去重\n}\n/**\n * 获取单个元素的属性定位参数\n * @param element\n * @returns\n */\nexport function getElementProperties(element) {\n    if (!element) {\n        console.warn('element is null');\n        return {};\n    }\n    const tag = element.tagName;\n    const classList = getElementClassList(element);\n    const name = element.name;\n    const id = element.id || '';\n    const href = element.href || '';\n    const alt = element.alt || '';\n    const xpath = getXPath(element);\n    const idxpath = getIdXPath(element);\n    const isButton = isButtonElement(element);\n    const location = getElementLocation(element);\n    const area = getElementArea(location);\n    const shape = getElementShape(location);\n    const visibleText = getVisibleText(element);\n    const neighborText = getNeighborText(element, location);\n    return {\n        tag,\n        classList,\n        name,\n        id,\n        href,\n        alt,\n        xpath,\n        idxpath,\n        isButton,\n        location,\n        area,\n        shape,\n        visibleText,\n        neighborText,\n    };\n}\n/**\n * 获取候选元素的属性定位参数\n * @param selector\n * @returns\n */\nexport function getCandidateElementsPropertiesBySelector(selector) {\n    const elements = document.querySelectorAll(selector);\n    return [...elements].filter((element) => elementIsVisible(element)).map((element) => getElementProperties(element));\n}\nexport function getElementPropertiesByXpath(xpath) {\n    const element = getElementByXPath(xpath);\n    return getElementProperties(element);\n}\n//# sourceMappingURL=property.js.map","/**\n * 属性值比较\n */\nimport { intersection, isEmpty, isNil, isString, stripString, toPrecision, union } from '.';\nexport function equalSimilarity(a, b) {\n    if (isNil(a) || isNil(b)) {\n        return 0;\n    }\n    if (isString(a) && !a.length) {\n        return 0;\n    }\n    if (a === b) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * 比较两个字符串是否相等，忽略大小写\n * @param a\n * @param b\n * @returns\n */\nexport function equalSimilarityCaseInsensitive(a, b) {\n    if (isEmpty(a) || isEmpty(b)) {\n        return 0;\n    }\n    if (String(a).toLowerCase() === String(b).toLowerCase()) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * 计算编辑距离\n * @param a\n * @param b\n */\nfunction computeLevenshteinDistance(a, b) {\n    const matrix = [];\n    const aLen = a.length;\n    const bLen = b.length;\n    if (!aLen) {\n        return bLen;\n    }\n    if (!bLen) {\n        return aLen;\n    }\n    // 初始化矩阵\n    for (let i = 0; i <= bLen; i++) {\n        matrix[i] = [i];\n    }\n    for (let j = 0; j <= aLen; j++) {\n        matrix[0][j] = j;\n    }\n    for (let i = 1; i <= bLen; i++) {\n        for (let j = 1; j <= aLen; j++) {\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            }\n            else {\n                const min = Math.min(matrix[i - 1][j - 1], matrix[i][j - 1], matrix[i - 1][j]);\n                matrix[i][j] = min + 1;\n            }\n        }\n    }\n    return matrix[bLen][aLen];\n}\n/**\n * 交换两个字符串\n * @param a\n * @param b\n */\nfunction swapStringByLength(a, b) {\n    if (a.length > b.length) {\n        return {\n            min: b,\n            max: a,\n        };\n    }\n    return {\n        min: a,\n        max: b,\n    };\n}\n/**\n * 交换两个数组\n * @param a\n * @param b\n */\nfunction swapArrayByLength(a, b) {\n    if (a.length > b.length) {\n        return {\n            min: b,\n            max: a,\n        };\n    }\n    return {\n        min: a,\n        max: b,\n    };\n}\n/**\n * 比较字符串编辑距离\n * @param a\n * @param b\n * @returns\n */\nexport function stringSimilarity(a, b) {\n    const newA = stripString(a);\n    const newB = stripString(b);\n    if (isEmpty(newA) || isEmpty(newB)) {\n        return 0;\n    }\n    if (newA === newB) {\n        return 1;\n    }\n    const maxLen = Math.max(newA.length, newB.length);\n    const { min, max } = swapStringByLength(newA, newB);\n    const distance = computeLevenshteinDistance(max, min);\n    const score = (maxLen - distance) / maxLen;\n    return toPrecision(score);\n}\n/**\n * 移除标点符号\n * 根据 4603 个可见元素文本数据集，统计出现频率最高的标点符号\n *\n * ... 例如 I'm shopping for...\n * ® 注册标识, 例如 Starbucks® Rewards Visa® Prepaid Card\n * ? 例如 stay?\n * ... 省略号, 例如 More...\n * ! 感叹号, 例如 Get it now!\n * ® 注册商标, 例如 Starbucks®\n * . 句号, 例如 back.\n * , 逗号, 例如 UP,\n * @param str\n */\nfunction wordSanitize(str) {\n    return (str || '').replace(/(&|\\?|\\.\\.\\.|\\!|®|©|[,.\\/\\-$]$)/g, '');\n}\nfunction worldListSanitize(wordList) {\n    return wordList.map((word) => wordSanitize(word).toLowerCase()).filter(Boolean);\n}\n/**\n * Jaccard(雅卡尔) 相似度, 比较文本集之间的相似度\n * 参考: https://www.wikiwand.com/zh/%E9%9B%85%E5%8D%A1%E5%B0%94%E6%8C%87%E6%95%B0\n * @param wordList1\n * @param wordList2\n */\nfunction jaccardSimilarity(wordList1, wordList2) {\n    if (isEmpty(wordList1) || isEmpty(wordList2)) {\n        return 0;\n    }\n    return intersection(wordList1, wordList2).length / union(wordList1, wordList2).length;\n}\n/**\n * 单词相似度比较\n * 1. 数据清洗：去除空格、标点符号、换行符\n * 2. 相似度比较\n * @param wordList1\n * @param wordList2\n */\nexport function wordSimilarity(wordList1, wordList2) {\n    const cleanWorldList1 = worldListSanitize(wordList1);\n    const cleanWorldList2 = worldListSanitize(wordList2);\n    const score = jaccardSimilarity(cleanWorldList1, cleanWorldList2);\n    return toPrecision(score);\n}\n/**\n * class 名称分割\n * -- 分割, followus--text\n * - 分割, other-project-link\n * __ 分割, footer__module\n * _ 分割, sc_fjdhpX\n * () 分割, W(190px)\n * [] 分割 .example[data-v-f3f3eg9]\n * @param classname\n */\nexport function classSegment(classname) {\n    return classname.split(/(--|-|__|_|\\[|\\()/).filter(Boolean);\n}\n/**\n * 比较两个 classList 的相似度\n * @param classList1\n * @param classList2\n */\nexport function classListSimilarity(classList1, classList2) {\n    if (isEmpty(classList1) || isEmpty(classList2)) {\n        return 0;\n    }\n    const cleanClassList1 = classList1\n        .map((classname) => classSegment(classname))\n        .flat()\n        .map((classname) => classname.toLowerCase());\n    const cleanClassList2 = classList2\n        .map((classname) => classSegment(classname))\n        .flat()\n        .map((classname) => classname.toLowerCase());\n    const score = jaccardSimilarity(cleanClassList1, cleanClassList2);\n    return toPrecision(score);\n}\n/**\n * xpath 相似度\n * 如果 XPath 末尾仅添加（或删除）一个元​​素可以使其与另一个 XPath 相匹配，则它们被认为是相似的\n * @param a\n * @param b\n */\nexport function xpathSimilarity(a, b) {\n    if (isEmpty(a) || isEmpty(b)) {\n        return 0;\n    }\n    const aParts = a.split('/');\n    const bParts = b.split('/');\n    const { min, max } = swapArrayByLength(aParts, bParts);\n    max.pop();\n    if (max.join('/') === min.join('/')) {\n        return 1;\n    }\n    return stringSimilarity(a, b);\n}\n/**\n * 坐标距离相似度\n * @param a\n * @param b\n * @returns\n */\nexport function pointSimilarity(a, b) {\n    if (isEmpty(a) || isEmpty(b)) {\n        return 0;\n    }\n    const invalid = [a.x, a.y, b.x, b.y].some(isNil);\n    if (invalid) {\n        return 0;\n    }\n    const dx = a.x - b.x;\n    const dy = a.y - b.y;\n    const pixelDistance = Math.sqrt(dx * dx + dy * dy);\n    const distance = Math.max(100 - pixelDistance, 0) / 100;\n    return toPrecision(distance);\n}\n/**\n * 整数相似度\n * @param a\n * @param b\n * @returns\n */\nexport function integerSimilarity(a, b) {\n    if (isNil(a) || isNil(b)) {\n        return 0;\n    }\n    const distance = Math.abs(a - b);\n    const max = Math.max(a, b);\n    const score = (max - distance) / max;\n    return toPrecision(score);\n}\n//# sourceMappingURL=compare.js.map","import { classListSimilarity, equalSimilarity, equalSimilarityCaseInsensitive, integerSimilarity, pointSimilarity, stringSimilarity, wordSimilarity, xpathSimilarity, } from '../utils/compare';\nexport const propertyConfigByName = {\n    tag: {\n        weight: 1.5,\n        compare: equalSimilarityCaseInsensitive,\n    },\n    name: {\n        weight: 1.5,\n        compare: equalSimilarityCaseInsensitive,\n    },\n    id: {\n        weight: 1.5,\n        compare: equalSimilarityCaseInsensitive,\n    },\n    visibleText: {\n        weight: 1.5,\n        compare: wordSimilarity,\n    },\n    neighborText: {\n        weight: 1.5,\n        compare: wordSimilarity,\n    },\n    classList: {\n        weight: 0.5,\n        compare: classListSimilarity,\n    },\n    href: {\n        weight: 0.5,\n        compare: stringSimilarity,\n    },\n    alt: {\n        weight: 0.5,\n        compare: stringSimilarity,\n    },\n    xpath: {\n        weight: 0.5,\n        compare: xpathSimilarity,\n    },\n    idxpath: {\n        weight: 0.5,\n        compare: xpathSimilarity,\n    },\n    isButton: {\n        weight: 0.5,\n        compare: equalSimilarity,\n    },\n    location: {\n        weight: 0.5,\n        compare: pointSimilarity,\n    },\n    area: {\n        weight: 0.5,\n        compare: integerSimilarity,\n    },\n    shape: {\n        weight: 0.5,\n        compare: integerSimilarity,\n    },\n};\nexport const propertyNames = Object.keys(propertyConfigByName);\n//# sourceMappingURL=index.js.map","/**\n * 计算属性相似度\n */\nimport { propertyConfigByName, propertyNames } from './config';\nimport { toPrecision } from './utils';\nexport function findPropertyByXpath(xpath, properties) {\n    return properties.find((p) => p.xpath === xpath);\n}\nexport function findPropertyIndexByXpath(xpath, properties) {\n    if (!Array.isArray(properties)) {\n        properties = [properties];\n    }\n    return properties.findIndex((p) => p.xpath === xpath);\n}\nexport function getSimilarScoreDetails(property1, property2) {\n    const scoreDetails = propertyNames.map((name) => {\n        const { weight, compare } = propertyConfigByName[name];\n        const value1 = property1[name];\n        const value2 = property2[name];\n        // @ts-ignore\n        const similarity = compare(value1, value2);\n        if (similarity) {\n            return {\n                name,\n                value: {\n                    target: value1,\n                    candidate: value2,\n                },\n                weight,\n                similarity,\n                score: toPrecision(weight * similarity, 6),\n            };\n        }\n    });\n    return scoreDetails.filter(Boolean);\n}\nfunction sumScore(scoreDetails) {\n    return scoreDetails.reduce((acc, cur) => acc + cur.score, 0);\n}\n/**\n * 将分数转为 0-100 之间的数\n * @param scores\n * @param idealScore\n */\nfunction normalizeScore(scores, idealScore) {\n    return scores.map((score) => {\n        if (!idealScore) {\n            return 0;\n        }\n        const normalized = (score * 100) / idealScore;\n        return toPrecision(normalized, 6);\n    });\n}\nfunction getMaxScoreDetail(scoreDetailsList, idealScore) {\n    const scores = scoreDetailsList.map((detail) => sumScore(detail));\n    let index = -1;\n    let max = -Infinity;\n    scores.forEach((score, i) => {\n        if (score > max) {\n            max = score;\n            index = i;\n        }\n    });\n    return {\n        max,\n        index,\n        scores,\n    };\n}\n/**\n * 获取目标元素的理想分数(所有项都匹配)\n * @param property\n * @returns\n */\nexport function getIdealScore(property) {\n    const scoreDetails = getSimilarScoreDetails(property, property);\n    return sumScore(scoreDetails);\n}\n/**\n * 根据元素属性，从候选元素中找到最相似的元素\n * @param property\n * @param properties\n */\nexport function findSimilarProperty(property, properties) {\n    const scoreDetailsList = properties.map((p) => getSimilarScoreDetails(property, p));\n    const idealScore = getIdealScore(property);\n    const { scores, max, index } = getMaxScoreDetail(scoreDetailsList, idealScore);\n    return {\n        scores,\n        maxScore: max,\n        maxIndex: index,\n        scoreDetails: scoreDetailsList,\n        similarProperty: properties[index],\n    };\n}\n//# sourceMappingURL=similarity.js.map"],"names":[],"mappings":"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"}